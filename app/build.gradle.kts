import org.gradle.jvm.toolchain.JvmVendorSpec.ADOPTIUM

val kotlinVersion = "1.9.23"

plugins {
    kotlin("jvm") version "1.9.23"
    application
    id("org.springframework.boot") version "3.2.5"
    id("net.linguica.maven-settings").version("0.5")
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
        vendor = ADOPTIUM
    }
}

val defaultJvmArgs = listOf("-XX:+EnableDynamicAgentLoading")

application {
    applicationDefaultJvmArgs = defaultJvmArgs
}

tasks.jar {
    enabled = false // Jar is generated by bootJar task
}

tasks.bootJar {
    destinationDirectory.set(file("${layout.buildDirectory.get()}"))
}

tasks.test {
    jvmArgs(defaultJvmArgs)
    useJUnitPlatform()
    testLogging.showStandardStreams = true
}

tasks.compileTestKotlin {
    kotlinOptions.freeCompilerArgs += listOf("-Xsam-conversions=class") // To enable the usage of Mockito spy. See issue https://github.com/mockito/mockito-kotlin/issues/441
}

repositories {
    mavenCentral()
}

mavenSettings {
    userSettingsFileName = System.getProperty("maven_settings") ?: "${System.getProperty("user.home")}/.m2/settings.xml"
}

apply(plugin = "io.spring.dependency-management")

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-validation")
    implementation("org.springframework.integration:spring-integration-sftp")
    implementation("jakarta.inject:jakarta.inject-api:2.0.1")

    // Metrics and logs
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("io.micrometer:micrometer-registry-prometheus")
    implementation("net.logstash.logback:logstash-logback-encoder:7.4")
    implementation("io.github.oshai:kotlin-logging-jvm:5.1.0")

    // Kotlin
    implementation("org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion")

    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation("org.springframework.boot:spring-boot-testcontainers")
    testImplementation("org.testcontainers:testcontainers")
    testImplementation("org.testcontainers:junit-jupiter")
    testImplementation("org.awaitility:awaitility:4.2.1")
}
